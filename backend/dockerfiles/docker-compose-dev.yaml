version: "3.8"

services:
  smart-fluid-flow-meter-backend:
    env_file: "../.env"
    build:
      dockerfile: dockerfiles/dev
      context: ../
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - type: bind
        source: ../assets
        target: /smart-fluid-flow-meter/assets
      - type: bind
        source: ../src
        target: /smart-fluid-flow-meter/src
      - type: bind
        source: ../tests
        target: /smart-fluid-flow-meter/tests
      - type: bind
        source: ../Cargo.toml
        target: /smart-fluid-flow-meter/Cargo.toml
      - type: bind
        source: ../Cargo.lock
        target: /smart-fluid-flow-meter/Cargo.lock
      - type: bind
        source: ../build/registry
        target: /usr/local/cargo/registry
      - type: bind
        source: ../build/target
        target: /smart-fluid-flow-meter/target
      - type: bind
        source: ../build/registry
        target: /usr/local/cargo/registry
    ports:
      - '3000:3000'
    expose:
      - '3000'
    command: >
      sh -c "RUST_BACKTRACE=1 cargo watch -x run"

  postgres:
    image: postgres:17.2
    environment:
      POSTGRES_DB: 'mekadomus'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
        test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        timeout: 10s
        retries: 5
